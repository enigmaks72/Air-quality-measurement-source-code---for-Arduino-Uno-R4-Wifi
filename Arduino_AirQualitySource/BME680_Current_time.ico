#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME680.h>
#include <WiFi.h>
#include <WiFiUdp.h>
#include <NTPClient.h>

// WiFi 설정
const char* ssid = "onion";
const char* password = "0";

// NTP 서버 설정
const long utcOffsetInSeconds = 9 * 3600; // UTC+9 (KST)

// WiFi UDP 및 NTP 클라이언트 객체 생성
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", utcOffsetInSeconds);

// BME680 객체 생성
Adafruit_BME680 bme; // I2C interface

void setup() {
  // Serial 포트 초기화
  Serial.begin(9600);
  while (!Serial);

  // WiFi 연결 시도
  connectWiFi();

  // NTP 클라이언트 시작
  timeClient.begin();

  // BME680 센서 초기화
  if (!bme.begin()) {
    Serial.println("Could not find a valid BME680 sensor, check wiring!");
    while (1);
  }

  // BME680 센서 설정
  bme.setTemperatureOversampling(BME680_OS_8X);
  bme.setHumidityOversampling(BME680_OS_2X);
  bme.setPressureOversampling(BME680_OS_4X);
  bme.setIIRFilterSize(BME680_FILTER_SIZE_3);
  bme.setGasHeater(320, 150); // 320°C for 150 ms
}

void loop() {
  // NTP 시간 업데이트
  timeClient.update();

  // 현재 시간 가져오기
  String formattedTime = timeClient.getFormattedTime();

  // BME680에서 측정값 가져오기
  if (!bme.performReading()) {
    Serial.println("Failed to perform reading :(");
    return;
  }

  // 시리얼 모니터에 출력
  Serial.print("Current time: ");
  Serial.println(formattedTime);

  Serial.print("Temperature: ");
  Serial.print(bme.temperature);
  Serial.println(" °C");

  Serial.print("Humidity: ");
  Serial.print(bme.humidity);
  Serial.println(" %");

  Serial.print("Pressure: ");
  Serial.print(bme.pressure / 100.0);
  Serial.println(" hPa");

  Serial.print("Gas Resistance: ");
  Serial.print(bme.gas_resistance / 1000.0); // Convert to KOhms
  Serial.println(" KOhms");

  Serial.println(); // 데이터 사이 구분을 위해 빈 줄 출력

  delay(5000); // 5초마다 측정값 출력
}

void connectWiFi() {
  // WiFi 연결 시도
  Serial.print("Attempting to connect to SSID: ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    // 연결 시도 중
    Serial.print(".");
    delay(1000);
  }
  
  // WiFi 연결 성공 시 정보 출력
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}
